services:

 postgres:
  container_name: postgres
  image: postgres:latest
  environment: #              !!!!!!!!!!!!!!CONVERT THIS TO AN ENV FILE LATER!!!!!!!!!!!!!
    - POSTGRES_HOST=postgres
    - POSTGRES_PORT=5432
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postpass
    - POSTGRES_DB=postgres
  ports:
    - 5432:5432
  restart: always
  user: postgres
  volumes:
      - ./database/data:/data/postgres
  networks:
    - db

 pgadmin:
  container_name: pgadmin
  image: dpage/pgadmin4
  depends_on:
    - postgres
  ports:
    - 8888:80
  environment: 
    - PGADMIN_DEFAULT_EMAIL=username@domain.com
    - PGADMIN_DEFAULT_PASSWORD=password
  volumes:
    - ./database/pgadmin:/data/pgadmin
  networks:
    - db

# !!!!!UNCOMMENTING THE ABOVE WILL CREATE AN ADDITIONAL CONTAINER RUNNING PGADMIN IN CASE YOU WANT
# TO HAVE A GUI WHEN WORKING WITH THE DATABASE !!!!!!

 backend:
  container_name: backend
  depends_on:
   - postgres
  build:
    dockerfile: Dockerfile
    context: ./backend
  env_file: ./backend/back.env
  command: npm run start:dev
  restart: unless-stopped
  ports:
   - 3003:3003
  # volumes:
  #  - ./backend/app:/app
  networks:
   - db

 frontend:
  container_name: frontend
  depends_on:
   - backend
  env_file: ./frontend/front.env
  command: npm run dev
  #restart: unless-stopped
  build: 
   dockerfile: Dockerfile
   context: ./frontend
  ports:
   - 8080:8080
  # volumes:
  #  - ./frontend/app:/app

networks:
 db:

